# Azure build pipeline script
# Add steps that build, run tests, deploy, and more: https://aka.ms/yaml

# This script processes daily and official releases (alpha/beta and final)
# To trigger an official release, add a commit tagged in the form "luxcorerender_v*"
# The "version_string" after the "_" in the tag is used in following steps
# to generate binary names like "luxcorerender-<version_string>-<platform>-..."
# One, and only one, tag in the form "luxcorerender_v*" is needed, 
# otherwise the official release build aborts.

resources:
  containers:
  - container: LinuxContainer
    image: ubuntu:14.04

# variables:
# - group: BuildPipelinesGroup

#trigger:
#  branches:
#    include: ['*']

jobs:
- job: DetectBuildType
  timeoutInMinutes: 0
  pool:
    vmImage: 'ubuntu-16.04'
    
  steps:
  - script: ./scripts/azurepipeline/detect-build-type.sh
    displayName: Detecting release type (daily, alpha, beta or final)
    name: setvarStep
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: LuxCore
    displayName: 'Upload github_release_title'
    condition: eq(variables['System.PullRequest.IsFork'], 'False')
    
    
- job: BlendLuxCoreLinux
  dependsOn: DetectBuildType
  condition: succeeded()
  timeoutInMinutes: 0
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
    version_string: $[ dependencies.DetectBuildType.outputs['setvarStep.version_string'] ]

  container: LinuxContainer

  steps:
  - template: ./scripts/azurepipeline/linux/linux_jobs.yml


# - job: LuxCoreRenderLinux_Blender280
  # # Variable 'blender280' triggers use of blender2.80 branch when setting up deps
  # dependsOn: DetectBuildType
  # condition: succeeded()
  # timeoutInMinutes: 0
  # pool:
    # vmImage: 'ubuntu-16.04'
  # variables:
    # version_string: $[ dependencies.DetectBuildType.outputs['setvarStep.version_string'] ]
    # blender280: 'TRUE'

  # container: LinuxContainer

  # steps:
  # - template: ./scripts/azurepipeline/linux/linux_jobs.yml


# - job: LuxCoreRenderWindows
  # dependsOn: DetectBuildType
  # condition: succeeded()
  # timeoutInMinutes: 0
  # pool:
    # vmImage: 'vs2017-win2016'
  # variables:
    # version_string: $[ dependencies.DetectBuildType.outputs['setvarStep.version_string'] ]

  # steps:
  # - task: UsePythonVersion@0
    # inputs:
      # versionSpec: '3.5'
      # addToPath: true
      # architecture: 'x64'
  # - script: ./scripts/azurepipeline/windows/deps-setup.cmd
    # displayName: Getting required deps
  # - template: ./scripts/azurepipeline/windows/windows_jobs.yml
    # parameters:
      # build_script: './scripts/azurepipeline/windows/build.cmd /cmake-only /no-ocl'
      # post_script: './scripts/azurepipeline/windows/post-build.cmd /no-ocl'
      # ocl_text: 'OpenCL disabled'
  # - template: ./scripts/azurepipeline/windows/windows_jobs.yml
    # parameters:
      # build_script: './scripts/azurepipeline/windows/build.cmd /cmake-only'
      # post_script: './scripts/azurepipeline/windows/post-build.cmd'
      # ocl_text: 'OpenCL enabled'
  # - script: './scripts/azurepipeline/windows/test.cmd'
    # displayName: Testing LuxCore
  # - task: PublishBuildArtifacts@1
    # inputs:
      # pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      # artifactName: LuxCore
    # displayName: 'Upload luxcorerender-<version>-win64.zip'
    # condition: eq(variables['System.PullRequest.IsFork'], 'False')


# - job: LuxCoreRenderWindows_Blender280
  # # This is based on Python 3.7
  # # Variable 'blender280' triggers use of blender2.80 branch when setting up deps
  # dependsOn: DetectBuildType
  # condition: succeeded()
  # timeoutInMinutes: 0
  # pool:
    # vmImage: 'vs2017-win2016'
  # variables:
    # version_string: $[ dependencies.DetectBuildType.outputs['setvarStep.version_string'] ]
    # blender280: 'TRUE'

  # steps:
  # - task: UsePythonVersion@0
    # inputs:
      # versionSpec: '3.7'
      # addToPath: true
      # architecture: 'x64'
  # - script: ./scripts/azurepipeline/windows/deps-setup.cmd
    # displayName: Getting required deps
  # - template: ./scripts/azurepipeline/windows/windows_jobs.yml
    # parameters:
      # build_script: './scripts/azurepipeline/windows/build.cmd /cmake-only /no-ocl /python37'
      # post_script: './scripts/azurepipeline/windows/post-build.cmd /no-ocl'
      # ocl_text: 'OpenCL disabled'
  # - template: ./scripts/azurepipeline/windows/windows_jobs.yml
    # parameters:
      # build_script: './scripts/azurepipeline/windows/build.cmd /cmake-only /python37'
      # post_script: './scripts/azurepipeline/windows/post-build.cmd'
      # ocl_text: 'OpenCL enabled'
  # - script: './scripts/azurepipeline/windows/test.cmd'
    # displayName: Testing LuxCore
  # - task: PublishBuildArtifacts@1
    # inputs:
      # pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      # artifactName: LuxCore
    # displayName: 'Upload luxcorerender-<version>-win64.zip'
    # condition: eq(variables['System.PullRequest.IsFork'], 'False')


#- job: LuxCoreRenderMacOS
#  timeoutInMinutes: 0
#  pool:
#    vmImage: 'macOS-10.13'
#
#  steps:
#  - script: ./scripts/azurepipeline/macos/install.sh
#    displayName: Install Build Tools
#  - script: ./scripts/azurepipeline/macos/build.sh
#    displayName: Building LuxCore
#  - script: ./scripts/azurepipeline/macos/test.sh
#    displayName: Testing LuxCore


# Next job deletes "latest" tag from LuxCore repo, so that it is then
# recreated at the current commit by the following release pipeline
# Runs only if:
# - this is a daily build
# - at least one of the build jobs was successful 
# - the pipeline has been triggered by master branch and not by a pull request
# - job: DeleteLatestTag
  # dependsOn: 
  # - DetectBuildType
  # - LuxCoreRenderLinux
  # - LuxCoreRenderWindows
  # # - LuxCoreRenderMacOS
  # variables:
    # version_string: $[ dependencies.DetectBuildType.outputs['setvarStep.version_string'] ]
  # condition: |
    # and
    # (
      # eq(variables['System.PullRequest.IsFork'], 'False'),
      # eq(variables['Build.SourceBranchName'], 'master'),
      # eq(dependencies.DetectBuildType.outputs['setvarStep.version_string'], 'latest'),
      # in(dependencies.LuxCoreRenderLinux.result, 'Succeeded', 'SucceededWithIssues'),
      # in(dependencies.LuxCoreRenderWindows.result, 'Succeeded', 'SucceededWithIssues')
    # )
  # timeoutInMinutes: 0
  # pool:
    # vmImage: 'ubuntu-16.04'
    
  # steps:
  # - task: InstallSSHKey@0
    # inputs:
      # hostName: github.com,140.82.118.3 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
      # sshPublicKey: $(PubKey)
      # sshKeySecureFile: luxcore_id_rsa
  # - script: ./scripts/azurepipeline/delete-latest-tag.sh
    # displayName: Deleting tag to update latest build
